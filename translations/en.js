import { selectAssignment } from "../redux/currentClassSlice";

const en = {
  common: {
    teacherLogin: "Teacher Login",
    createAccount: "Create Account",
    teacher: "Teacher",
    email: "Email",
    password: "Password",
    firstName: "First Name",
    lastName: "Last Name",
    signIn: "Sign In",
    logInWithGoogle: "Sign in with Google",
    otherLogin: "Other",
    changeLanguage: "Change Language",
    forgotPassword: "Forgot Password",
    or: "Or",
    createAccount: "Create an Account",
    return: "Return",
    register: "Register",
    backToClassrooms: "Back to Classrooms",
    createAClass: "Create a Class",
    createClass: "Create Class",
    exemplaGratia: '(e.g. Class A)',
    yourClassrooms: "Your Classrooms",
    logOut: "Log Out",
    assignment: "Assignment",
    assignments: "Assignments",
    noAssignments: "0 Assignments ...",
    grade: "Grade",
    grades: "Grades",
    showClassCode: "Show Class Code",
    enterClassName: "Enter Class Name",
    classNameDisplayText: "This is the class name which will be displayed for all students.",
    selectAGrade: "Select a Grade",
    gradeLevelDisplayText: "The class grade does not limit the level of assignments. It is only for identification purposes.",
    cancel: "Cancel",
    submit: "Submit",
    dashboard: "Dashboard",
    selectAnAssignment: "Select Assignment",
    upcomingAssignment: "Upcoming Assignments",
    pastAssignment: "Past Assignments",
    createAssignment: "Create Assignment",
    currentAssignment: "This assignment is currently selected.",
    lesson: "Lesson",
    chapter: "chapter",
    numberOfActivities: "Number of Activities",
    dateAssigned: "Date Assigned",
    assignCompletionTimeline: "Assignment Completion Timeline",
    completionRate: "Completion Rate",
    overallAssignProg: "Overall Assignment Progress",
    activityCompletion: "Activity Completion",
    numCompletions: "Number of Completions",
    viewSubmission: "View Submission",
    name: "Name",
    activitiesCompleted: "Activities Completed",
    noAssignmentSelected: "No Assignment Selected",
    inProgress: "In Progress",
    completed: "Completed",
    notStarted: "Not Started",
    sortBy: "Sort By",
    leastCompleted: "Least Completed",
    mostCompleted: "Most Completed",
    preview: "Preview",
    create: "Create",
    dueDate: "Date due:",
    dateDue: "Due Date",
    assignmentCreatedSuccessfully: "Assignment created successfully!",
    account: "Account",
    help: "Help",
    contactSupport: "Contact Support",
    yourPersonalAccount: "Your personal account",
    displayName: "Display Name",
    displayNameText: "Only your last name is displayed to students on the Save Tuba mobile app.",
    displayEmailTextOne: "This is the email by which the support team will contact you if you've recently submitted a help ticket.",
    displayEmailTextTwo: "Your email address is never shown to students or anyone else besides the support team.",
    settings: "Settings",
    currentLanguage: "Current Language",
    havegoogle: "Have a Google Account?",
    backtogooglelogin: "No need to register! Head back to the Google login page.",
  },
  error: {
    emailAlreadyInUse: "Email already in use.",
    googlePopupBlocked: "Google popup was blocked. Please allow popups.",
    networkRequestFailed: "Network Request Failed. Please try again or contact support.",
    invalidLogin: "Invalid Login. Please try again.",
    errorOccured: "An error occured. Please try again or contact support.",
    incorrectPassword: "Incorrect Password",
    pleaseCreateTeacherAccount: "Please Create a Teacher Account to Continue",
    enterValidEmail: "Please enter a valid email",
    doesNotExist: "does not exist",
    accountAlreadyExists: "Account already exists.",
    weakPassword: "Weak password. Make sure your password is longer than 6 characters.",
    enterFirstName: "Please enter a first name",
    enterLastName: "Please enter a last name",
    pageRouterError: "Sorry, an unexpected error has occurred.",
    pleaseTryAgain: "Please try again or contact support at savetuba2023@gmail.com.",
    pageNotFound: "404 Page Not Found",
    pageDoesNotExist: "The page you are looking for does not exist.",
    oops: "Oops!",
    enterValidGrade: "Please enter a valid grade",
    enterClassName: "Please enter a class name",
    errorCreatingClass: "Error creating class. Please contact support.",
  },
  success: {
    accountCreated: "Account Created. Welcome",
    resetPasswordEmailSent: "Reset password email sent to",
    loggedOut: "Logged out",
    successfullyCreated: "successfully created",
  },
  loading: {
    loading: "Loading...",
    sendingPasswordReset: "Sending Password Reset Email...",
    creatingAccount: "Creating Account",
    creatingClass: "Creating Class"
  }
}

export default en;